name: 👥 Community Health
on:
  schedule:
    # Run every Sunday at 10:00 AM UTC
    - cron: '0 10 * * 0'
  workflow_dispatch:
  issues:
    types: [opened, closed]
  pull_request:
    types: [opened, closed, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: read

jobs:
  community-health:
    runs-on: ubuntu-latest
    name: Monitor Community Health

    steps:
      - name: 🛒 Checkout Repository
        uses: actions/checkout@v4

      - name: 📊 Analyze Community Metrics
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "# 👥 Community Health Report" > community-report.md
          echo "Generated on: $(date)" >> community-report.md
          echo "" >> community-report.md
          
          # Community Files Check
          echo "## 📋 Community Documentation" >> community-report.md
          echo "- **README.md**: $([ -f README.md ] && echo '✅ Present' || echo '❌ Missing')" >> community-report.md
          echo "- **CONTRIBUTING.md**: $([ -f CONTRIBUTING.md ] && echo '✅ Present' || echo '❌ Missing')" >> community-report.md
          echo "- **CODE_OF_CONDUCT.md**: $([ -f CODE_OF_CONDUCT.md ] && echo '✅ Present' || echo '❌ Missing')" >> community-report.md
          echo "- **Issue Templates**: $([ -d .github/ISSUE_TEMPLATE ] && echo '✅ Present' || echo '❌ Missing')" >> community-report.md
          echo "- **PR Template**: $([ -f .github/PULL_REQUEST_TEMPLATE.md ] && echo '✅ Present' || echo '❌ Missing')" >> community-report.md
          echo "" >> community-report.md
          
          # GitHub Issues and PRs
          echo "## 🎯 Engagement Metrics" >> community-report.md
          OPEN_ISSUES=$(gh issue list --state open --json number | jq length)
          CLOSED_ISSUES=$(gh issue list --state closed --json number | jq length)
          OPEN_PRS=$(gh pr list --state open --json number | jq length)
          MERGED_PRS=$(gh pr list --state merged --json number | jq length)
          
          echo "- **Open Issues**: $OPEN_ISSUES" >> community-report.md
          echo "- **Closed Issues**: $CLOSED_ISSUES" >> community-report.md
          echo "- **Open Pull Requests**: $OPEN_PRS" >> community-report.md
          echo "- **Merged Pull Requests**: $MERGED_PRS" >> community-report.md
          echo "" >> community-report.md
          
          # Issue Response Time Analysis
          echo "## ⏱️ Response Times" >> community-report.md
          echo "- **Recent Issue Activity**: $(gh issue list --state all --limit 10 --json createdAt,updatedAt | jq 'length') recent items" >> community-report.md
          echo "" >> community-report.md

      - name: 🌟 Female Empowerment Mission Check
        run: |
          echo "## 🌟 Mission Alignment Assessment" >> community-report.md
          echo "" >> community-report.md
          
          # Count mission-related content
          EMPOWERMENT_CONTENT=$(grep -ri 'empowerment\|empower' . --include='*.md' --include='*.vue' --include='*.ts' | grep -v node_modules | wc -l)
          FEMALE_FOCUS=$(grep -ri 'female\|women\|woman' . --include='*.md' --include='*.vue' --include='*.ts' | grep -v node_modules | wc -l)
          COACHING_CONTENT=$(grep -ri 'coach\|coaching\|mentor' . --include='*.md' --include='*.vue' --include='*.ts' | grep -v node_modules | wc -l)
          COMMUNITY_CONTENT=$(grep -ri 'community\|gemeinde\|gemeinschaft' . --include='*.md' --include='*.vue' --include='*.ts' | grep -v node_modules | wc -l)
          
          echo "- **Empowerment References**: $EMPOWERMENT_CONTENT mentions" >> community-report.md
          echo "- **Female-focused Content**: $FEMALE_FOCUS mentions" >> community-report.md
          echo "- **Coaching Content**: $COACHING_CONTENT mentions" >> community-report.md
          echo "- **Community Building**: $COMMUNITY_CONTENT mentions" >> community-report.md
          echo "" >> community-report.md
          
          # Mission Score Calculation
          TOTAL_MISSION_SCORE=$((EMPOWERMENT_CONTENT + FEMALE_FOCUS + COACHING_CONTENT + COMMUNITY_CONTENT))
          echo "- **Overall Mission Score**: $TOTAL_MISSION_SCORE points" >> community-report.md
          echo "" >> community-report.md

      - name: 🎯 Inclusivity Assessment
        run: |
          echo "## 🌈 Inclusivity & Accessibility" >> community-report.md
          echo "" >> community-report.md
          
          # Accessibility features
          A11Y_ARIA=$(grep -ri 'aria-' . --include='*.vue' --include='*.html' | grep -v node_modules | wc -l)
          A11Y_ALT=$(grep -ri 'alt=' . --include='*.vue' --include='*.html' | grep -v node_modules | wc -l)
          A11Y_ROLE=$(grep -ri 'role=' . --include='*.vue' --include='*.html' | grep -v node_modules | wc -l)
          
          echo "- **ARIA Attributes**: $A11Y_ARIA implementations" >> community-report.md
          echo "- **Alt Text Usage**: $A11Y_ALT implementations" >> community-report.md
          echo "- **Role Attributes**: $A11Y_ROLE implementations" >> community-report.md
          echo "" >> community-report.md
          
          # Inclusive language check
          INCLUSIVE_LANG=$(grep -ri 'inclusive\|diversity\|accessible\|barrier.*free' . --include='*.md' | grep -v node_modules | wc -l)
          echo "- **Inclusive Language**: $INCLUSIVE_LANG mentions" >> community-report.md
          echo "" >> community-report.md

      - name: 📈 Growth Recommendations
        run: |
          echo "## 🚀 Growth Recommendations" >> community-report.md
          echo "" >> community-report.md
          
          # Generate actionable recommendations
          echo "### 🎯 Mission-Focused Improvements:" >> community-report.md
          
          if [ $EMPOWERMENT_CONTENT -lt 10 ]; then
            echo "- 🌟 **Increase empowerment content**: Add more resources about female empowerment" >> community-report.md
          fi
          
          if [ $A11Y_ARIA -lt 5 ]; then
            echo "- ♿ **Enhance accessibility**: Implement more ARIA attributes for screen readers" >> community-report.md
          fi
          
          if [ $OPEN_ISSUES -gt 10 ]; then
            echo "- 🎯 **Issue management**: Consider addressing backlog of open issues" >> community-report.md
          fi
          
          echo "- 📱 **Mobile optimization**: Ensure mobile-first design for wider accessibility" >> community-report.md
          echo "- 🌍 **Internationalization**: Consider multi-language support for global reach" >> community-report.md
          echo "- 👥 **Community engagement**: Encourage more diverse contributions" >> community-report.md
          echo "- 📚 **Educational content**: Expand learning resources and tutorials" >> community-report.md
          echo "" >> community-report.md
          
          echo "---" >> community-report.md
          echo "*This report supports our mission of creating an inclusive platform for female empowerment.*" >> community-report.md

      - name: 📝 Create Community Health Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_TITLE="👥 Weekly Community Health Report - $(date +%Y-%m-%d)"
          
          gh issue create \
            --title "$ISSUE_TITLE" \
            --body-file community-report.md \
            --label "community,health-check,monitoring,automated" \
            --assignee "@me"

      - name: 📈 Upload Community Report
        uses: actions/upload-artifact@v4
        with:
          name: community-health-report
          path: community-report.md
          retention-days: 30