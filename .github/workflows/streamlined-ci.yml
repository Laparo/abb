name: 🚀 Streamlined CI (Qodo-Optimized)

# Optimierte CI Pipeline - Style/Quality Checks werden von Qodo übernommen
# Fokus auf Build-kritische und Funktions-Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  # Nur noch Essential CI Checks - Rest macht Qodo
  essential-checks:
    name: 🔧 Essential Build & Function Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      # ✅ Build-kritische TypeScript Compilation (bleibt in CI)
      - name: 🔍 TypeScript Build Check
        run: npm run typecheck

      # ⚡ Unit Tests werden jetzt in Azure Free Tier ausgeführt
      - name: 📋 Unit Tests Status
        run: |
          echo "⚡ Unit Tests werden in Azure Static Web Apps Free Tier ausgeführt"
          echo "🔗 Tests sind Teil der Azure Build Pipeline"
          echo "✅ Deployment schlägt fehl wenn Tests nicht bestehen"

      # ✅ Build Validation (bleibt in CI)
      - name: 🏗️ Production Build
        run: npm run build

  # ✅ E2E Tests (bleibt in CI - kann nicht von Qodo gemacht werden)
  e2e-tests:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    needs: essential-checks
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js  
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      # Install Playwright browsers and required OS dependencies on the runner
      - name: 🎭 Install Playwright Browsers
        uses: microsoft/playwright-github-action@v1

      - name: 🎭 Run Playwright Tests
        run: npm run test:e2e

      - name: 📊 Upload Playwright Report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/

  # ✅ Nur noch Error-Level ESLint (Style Rules → Qodo)
  critical-lint:
    name: 🚨 Critical Lint Errors Only
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      # Nur Error-Level (Style → Qodo)
      - name: 🚨 ESLint Critical Errors Only
        run: npm run lint -- --quiet --max-warnings=0

  # ❌ ENTFERNTE CHECKS (jetzt Qodo):
  # - Prettier formatting
  # - Markdownlint  
  # - Dependency vulnerability scan
  # - Code style violations (non-error)
  # - Vue/Nuxt best practices
  # - JSDoc documentation quality
  # - TypeScript advanced patterns